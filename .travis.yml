sudo: false
dist: trusty
language: cpp

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
            - libtag1-dev
            - libuv1-dev
      env:
        - COMPILER=5 BUILD_TYPE=Debug
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
            - libtag1-dev
            - libuv1-dev
      env:
        - COMPILER=5 BUILD_TYPE=Release
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
            - libtag1-dev
            - libuv1-dev
      env:
        - COMPILER=6 BUILD_TYPE=Debug
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
            - libtag1-dev

      env:
        - COMPILER=6 BUILD_TYPE=Release
    - compiler: clang
      os: osx
      env:
        - BUILD_TYPE=Debug
      osx_image: xcode7.3
    - compiler: clang
      os: osx
      env:
        - BUILD_TYPE=Release
      osx_image: xcode7.3

env:
  global:
    secure: "M8/nLpE7xETAaDTf136Tfr9ubXNROfuPp9AfxkR12pNu/ErV48mSzC7wP5b9m5oO+ZvRsqFbb9BQR3aRfvLBlqe/gySh8cFN+Xl836iIT6DCZ0wpAK8JhlJYAThRzpJAB9RPwEqSyWIlB9HT35ywkeWrhH3IIGQiG2i2EyycPGU="

before_install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  - export CXXFLAGS="-isystem ${DEPS_DIR}/local/include"
  - export PKG_CONFIG_PATH=${DEPS_DIR}/local/lib/pkgconfig
  - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/local/lib"
  - export LDFLAGS="-L${DEPS_DIR}/local/lib"

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi

  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake libuv libupnp jpeg libpng ffmpeg taglib
    fi

  ############################################################################
  # Install libc++ and libc++abi (on Linux only; Xcode uses libc++ by default)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${CXX}" == "clang++" ]]; then
      if   [[ "${COMPILER}" == "3.5" ]]; then LLVM_VERSION="3.5.2"
      elif [[ "${COMPILER}" == "3.6" ]]; then LLVM_VERSION="3.6.2";
      elif [[ "${COMPILER}" == "3.7" ]]; then LLVM_VERSION="3.7.1";
      elif [[ "${COMPILER}" == "3.8" ]]; then LLVM_VERSION="3.8.0";
      else                                            LLVM_VERSION="trunk"; fi
      if [[ "${LLVM_VERSION}" != "trunk" ]]; then
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        TAR_FLAGS="-xJ"
      else
        LLVM_URL="https://github.com/llvm-mirror/llvm/archive/master.tar.gz"
        LIBCXX_URL="https://github.com/llvm-mirror/libcxx/archive/master.tar.gz"
        LIBCXXABI_URL="https://github.com/llvm-mirror/libcxxabi/archive/master.tar.gz"
        TAR_FLAGS="-xz"
      fi
      mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
      travis_retry wget --quiet -O - ${LLVM_URL} | tar --strip-components=1 ${TAR_FLAGS} -C llvm
      travis_retry wget --quiet -O - ${LIBCXX_URL} | tar --strip-components=1 ${TAR_FLAGS} -C llvm/projects/libcxx
      travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 ${TAR_FLAGS} -C llvm/projects/libcxxabi
      (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/local -DCMAKE_CXX_COMPILER=clang++)
      (cd llvm/build/projects/libcxx && make install -j2)
      (cd llvm/build/projects/libcxxabi && make install -j2)
      export LDFLAGS="${LDFLAGS} -lc++ -lc++abi"
      export CXXFLAGS="${CXXFLAGS} -isystem ${DEPS_DIR}/local/include/c++/v1 -stdlib=libc++"
      export CXX="clang++-${COMPILER}" CC="clang-${COMPILER}"
    fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-${COMPILER}" CC="gcc-${COMPILER}"; fi

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      wget http://sourceforge.net/projects/pupnp/files/pupnp/libUPnP%201.6.19/libupnp-1.6.19.tar.bz2
      tar xf libupnp-1.6.19.tar.bz2
      cd libupnp-1.6.19 && ./configure --disable-dependency-tracking --prefix=${DEPS_DIR}/local --disable-shared --disable-samples --disable-blocking-tcp-connections && make -j4 && make install
      cd ..
    fi
  - cd ${TRAVIS_BUILD_DIR}

script:
  - git submodule update --init --recursive
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .
  - make -j4

addons:
  coverity_scan:
    project:
      name: "dirkvdb/doozy"
      description: "Build submitted via Travis CI"
    notification_email: dirk.vdb@gmail.com
    build_command_prepend: "cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE"
    build_command: "make -j4"
    branch_pattern: coverity_scan
