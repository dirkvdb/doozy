sudo: required
dist: trusty
language: cpp

matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=5 BUILD_TYPE=Debug
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=5 BUILD_TYPE=Release
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=6 BUILD_TYPE=Debug
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=6 BUILD_TYPE=Release
    - compiler: clang
      addons:
        apt:
          packages:
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=3.7 LLVM_VERSION=3.7.1 BUILD_TYPE=Debug
    - compiler: clang
      addons:
        apt:
          packages:
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=3.7 LLVM_VERSION=3.7.1 BUILD_TYPE=Release
    - compiler: clang
      addons:
        apt:
          packages:
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=3.8 LLVM_VERSION=3.8.0 BUILD_TYPE=Debug
    - compiler: clang
      addons:
        apt:
          packages:
            - libcurl4-gnutls-dev
            - uuid-dev
            - libpng-dev
      env:
        - COMPILER=3.8 LLVM_VERSION=3.8.0 BUILD_TYPE=Release
    - compiler: clang
      os: osx
      env:
        - BUILD_TYPE=Debug
      osx_image: xcode7.3
    - compiler: clang
      os: osx
      env:
        - BUILD_TYPE=Release
      osx_image: xcode7.3

env:
  global:
    secure: "M8/nLpE7xETAaDTf136Tfr9ubXNROfuPp9AfxkR12pNu/ErV48mSzC7wP5b9m5oO+ZvRsqFbb9BQR3aRfvLBlqe/gySh8cFN+Xl836iIT6DCZ0wpAK8JhlJYAThRzpJAB9RPwEqSyWIlB9HT35ywkeWrhH3IIGQiG2i2EyycPGU="

before_install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR}/local
  - cd ${DEPS_DIR}
  - export CXXFLAGS="-isystem ${DEPS_DIR}/local/include"
  - export PKG_CONFIG_PATH=${DEPS_DIR}/local/lib/pkgconfig
  - export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/local/lib"
  - export LDFLAGS="-L${DEPS_DIR}/local/lib"

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    fi

  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake libuv libupnp libtag
    fi

  ############################################################################
  # Install clang on linux
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${CXX}" == "clang++" ]]; then
      travis_retry wget --quiet -O - http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz | tar --strip-components=1 ${TAR_FLAGS} -xJ -C ${DEPS_DIR}/local

      export PATH=${DEPS_DIR}/local/bin:${PATH}
      export LDFLAGS="${LDFLAGS} -lc++ -lc++abi -lm"
      export CXXFLAGS="${CXXFLAGS} -isystem ${DEPS_DIR}/local/include/c++/v1 -stdlib=libc++"
      export CXX="clang-${COMPILER}" CC="clang-${COMPILER}"
      ${CXX} -v
    fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-${COMPILER}" CC="gcc-${COMPILER}"; fi

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      wget https://github.com/libuv/libuv/archive/v1.9.1.tar.gz
      tar xf v1.9.1.tar.gz
      cd libuv-1.9.1 && ./autogen.sh && ./configure --disable-dependency-tracking --prefix=${DEPS_DIR}/local --disable-shared && make -j4 && make install
      cd ..
      wget http://taglib.github.io/releases/taglib-1.11.tar.gz
      tar xf taglib-1.11.tar.gz
      cd taglib-1.11
      cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX:PATH=${DEPS_DIR}/local .
      make -j4 install
      cd ..
      wget ftp://ftp.simplesystems.org/pub/libpng/png/src/libpng16/libpng-1.6.23.tar.gz
      tar xf libpng-1.6.23.tar.gz
      cd libpng-1.6.23 && ./configure --prefix=${DEPS_DIR}/local --disable-dependency-tracking && make install
      cd ..
    fi
  - cd ${TRAVIS_BUILD_DIR}

script:
  - git submodule update --init --recursive
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .
  - make -j4

addons:
  coverity_scan:
    project:
      name: "dirkvdb/doozy"
      description: "Build submitted via Travis CI"
    notification_email: dirk.vdb@gmail.com
    build_command_prepend: "cmake . -DCMAKE_BUILD_TYPE=$BUILD_TYPE"
    build_command: "make -j4"
    branch_pattern: coverity_scan
